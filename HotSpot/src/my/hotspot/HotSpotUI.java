/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package my.hotspot;
import java.awt.Color;
import java.io.*;
import java.lang.*;
/**
 *
 * @author Araja Jyothi Babu
 */
public class HotSpotUI extends javax.swing.JFrame {

    /**
     * Creates new form HotSpotUI
     */
    public HotSpotUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        statusButton = new javax.swing.JToggleButton();
        createNew = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        create = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        nameToChange = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        pwdToChange = new javax.swing.JPasswordField();
        changePwd = new javax.swing.JButton();
        changeName = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        profile = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        Status = new javax.swing.JTextPane();
        jSeparator3 = new javax.swing.JSeparator();
        progress = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AASCAR's HotSpot");
        setBackground(new java.awt.Color(102, 255, 0));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(394, 325));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Lucida Calligraphy", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("AASCAR HotSpot");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        statusButton.setBackground(new java.awt.Color(51, 255, 0));
        statusButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        statusButton.setLabel("ON");
        statusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 502, Short.MAX_VALUE)
                .addComponent(statusButton))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(statusButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        createNew.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("HotSpot Name");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Password");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        create.setBackground(new java.awt.Color(153, 153, 255));
        create.setText("Create HotSpot");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("HotSpot Name");

        nameToChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameToChangeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Password");

        changePwd.setBackground(new java.awt.Color(153, 153, 255));
        changePwd.setText("Change Password");
        changePwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePwdActionPerformed(evt);
            }
        });

        changeName.setBackground(new java.awt.Color(153, 153, 255));
        changeName.setText("Change Name");
        changeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeNameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Connection");

        profile.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        profile.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                profileItemStateChanged(evt);
            }
        });
        profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileActionPerformed(evt);
            }
        });

        Status.setEditable(false);
        jScrollPane1.setViewportView(Status);

        javax.swing.GroupLayout createNewLayout = new javax.swing.GroupLayout(createNew);
        createNew.setLayout(createNewLayout);
        createNewLayout.setHorizontalGroup(
            createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createNewLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(createNewLayout.createSequentialGroup()
                                .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(changePwd, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(name)
                                    .addComponent(password)
                                    .addComponent(create, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nameToChange)
                                    .addComponent(changeName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pwdToChange)
                                    .addComponent(profile, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1))
        );
        createNewLayout.setVerticalGroup(
            createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createNewLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(createNewLayout.createSequentialGroup()
                        .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(create)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameToChange, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changeName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(createNewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pwdToChange, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(changePwd)))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(createNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void statusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusButtonActionPerformed
        // TODO add your handling code here:
        StringBuffer status = new StringBuffer("stop");
        if(statusButton.getText().equals("ON"))
        {
            status = new StringBuffer("start");
            statusButton.setText("OFF");
            statusButton.setBackground(Color.red);
            statusButton.setForeground(Color.white);
        }
        else
        {
            statusButton.setText("ON");
            statusButton.setBackground(Color.green);
            statusButton.setForeground(Color.black);
        }
        try 
            { 
                Process p=Runtime.getRuntime().exec("netsh wlan "+ status +" hostednetwork"); 
                p.waitFor(); 
                BufferedReader reader=new BufferedReader(
                    new InputStreamReader(p.getInputStream())
                ); 
                StringBuffer output = new StringBuffer("");
                String line;
                while((line = reader.readLine()) != null) 
                { 
                    //System.out.println(line);
                    output.append("\n" + line);
                } 
                Status.setText(output.toString());

            }
            catch(IOException e1) {} 
            catch(InterruptedException e2) {}
    }//GEN-LAST:event_statusButtonActionPerformed

    private void changeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeNameActionPerformed
        // TODO add your handling code here:
        if(!nameToChange.getText().equals(""))
        {
            try
            {
                Process p=Runtime.getRuntime().exec("netsh wlan set hostednetwork mode=allow ssid = "+ nameToChange.getText());
                p.waitFor();
                BufferedReader reader=new BufferedReader(
                    new InputStreamReader(p.getInputStream())
                );
                StringBuffer output = new StringBuffer("");
                String line;
                while((line = reader.readLine()) != null)
                {
                    output.append("\n"+line);
                }
                nameToChange.setText("");
                Status.setText(output.toString());

            }
            catch(IOException e1) {}
            catch(InterruptedException e2) {}
        }
        else
        {
            Status.setText("Please give valid name..!");
        }
    }//GEN-LAST:event_changeNameActionPerformed

    private void changePwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePwdActionPerformed
        // TODO add your handling code here:
        if(!pwdToChange.getPassword().equals("") && pwdToChange.getPassword().length > 7)
        {
            try
            {
                Process p=Runtime.getRuntime().exec("netsh wlan set hostednetwork mode=allow key = "+ pwdToChange.getPassword());
                p.waitFor();
                BufferedReader reader=new BufferedReader(
                    new InputStreamReader(p.getInputStream())
                );
                StringBuffer output = new StringBuffer("");
                String line;
                while((line = reader.readLine()) != null)
                {
                    //System.out.println(line);
                    output.append("\n"+line);
                }
                pwdToChange.setText("");
                Status.setText(output.toString());

            }
            catch(IOException e1) {}
            catch(InterruptedException e2) {}
        }
        else
        {
            if(pwdToChange.getPassword().equals(""))
                Status.setText("Please give password to your HotSpot..!");
            else
                Status.setText("Password must be greater than 8 charecters..!");
        }
    }//GEN-LAST:event_changePwdActionPerformed

    private void nameToChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameToChangeActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_nameToChangeActionPerformed

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        // TODO add your handling code here:
        if(!name.getText().equals("") && !password.getPassword().equals("") && password.getPassword().length > 7)
        {
            try
            {
                Process p=Runtime.getRuntime().exec("netsh wlan set hostednetwork mode=allow ssid = "+ name.getText()+ " key = " + password.getPassword());
                p.waitFor();
                BufferedReader reader=new BufferedReader(
                    new InputStreamReader(p.getInputStream())
                );
                StringBuffer output = new StringBuffer("");
                String line;
                while((line = reader.readLine()) != null)
                {
                    //System.out.println(line);
                    output.append("\n"+line);
                }
                name.setText("");
                password.setText("");
                Status.setText(output.toString());
            }
            catch(IOException e1) {}
            catch(InterruptedException e2) {}
        }
        else
        {
            if(password.getPassword().equals("") || name.getText().equals(""))
                Status.setText("Please give name and password to your HotSpot..!");
            else
                Status.setText("Password must be greater than 8 charecters..!");
        }

    }//GEN-LAST:event_createActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profileActionPerformed

    private void profileItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_profileItemStateChanged
        // TODO add your handling code here:
        try 
        { 
            Process p=Runtime.getRuntime().exec("netsh wlan connect " + profile.getSelectedItem()); 
            p.waitFor(); 
            BufferedReader reader=new BufferedReader(
                new InputStreamReader(p.getInputStream())
            ); 
            StringBuffer output = new StringBuffer("");
            String line;
            while((line = reader.readLine()) != null) 
            { 
                output.append("\n" + line);
            } 
            Status.setText(output.toString());

        }
        catch(IOException e1) {} 
        catch(InterruptedException e2) {}
    }//GEN-LAST:event_profileItemStateChanged

    /**
     * @param args the command line arguments
     */
    
    public void setNetworks() {
        try 
        { 
            Process p=Runtime.getRuntime().exec("netsh wlan show networks"); 
            p.waitFor(); 
            BufferedReader reader=new BufferedReader(
                new InputStreamReader(p.getInputStream())
            ); 
            StringBuffer output = new StringBuffer("");
            String line;
            profile.removeAllItems();
            while((line = reader.readLine()) != null) 
            {
                if(line.startsWith("SSID"))
                {
                    profile.addItem(line.substring(9));
                }
                //output.append("\n" + line);
            } 
            //Status.setText(output.toString());           
        }
        catch(IOException e1) {} 
        catch(InterruptedException e2) {}
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HotSpotUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HotSpotUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HotSpotUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HotSpotUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HotSpotUI hs = new HotSpotUI();
                hs.setNetworks();
                hs.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane Status;
    private javax.swing.JButton changeName;
    private javax.swing.JButton changePwd;
    private javax.swing.JButton create;
    private javax.swing.JPanel createNew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField name;
    private javax.swing.JTextField nameToChange;
    private javax.swing.JPasswordField password;
    private javax.swing.JComboBox profile;
    private javax.swing.JProgressBar progress;
    private javax.swing.JPasswordField pwdToChange;
    private javax.swing.JToggleButton statusButton;
    // End of variables declaration//GEN-END:variables
}
